// Code generated by MockGen. DO NOT EDIT.
// Source: fiscaldata.go

// Package fiscaldata is a generated GoMock package.
package fiscaldata

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockApp is a mock of App interface.
type MockApp struct {
	ctrl     *gomock.Controller
	recorder *MockAppMockRecorder
}

// MockAppMockRecorder is the mock recorder for MockApp.
type MockAppMockRecorder struct {
	mock *MockApp
}

// NewMockApp creates a new mock instance.
func NewMockApp(ctrl *gomock.Controller) *MockApp {
	mock := &MockApp{ctrl: ctrl}
	mock.recorder = &MockAppMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApp) EXPECT() *MockAppMockRecorder {
	return m.recorder
}

// GetRatesOfExchange mocks base method.
func (m *MockApp) GetRatesOfExchange(currencyDescription, transactionDate string) (*Data, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRatesOfExchange", currencyDescription, transactionDate)
	ret0, _ := ret[0].(*Data)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRatesOfExchange indicates an expected call of GetRatesOfExchange.
func (mr *MockAppMockRecorder) GetRatesOfExchange(currencyDescription, transactionDate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRatesOfExchange", reflect.TypeOf((*MockApp)(nil).GetRatesOfExchange), currencyDescription, transactionDate)
}
