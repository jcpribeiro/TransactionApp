// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/transaction": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Retrive stored a purchase transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transactions ids. If more than one id is provided, it must be separated by a comma. E.g. id1,id2",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency ids. E.g. Argentina-Peso",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TransactionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Store a purchase transaction",
                "parameters": [
                    {
                        "description": "add new transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Transaction"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/transaction/epoch-period": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Retrive stored a purchase transaction by period using epoch format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Period start date. E.g. 1697150153",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Period end date. E.g. 1697409353",
                        "name": "endDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency ids. E.g. Argentina-Peso",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TransactionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/transaction/period": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Retrive stored a purchase transaction by period",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Period start date. E.g. 2023-10-12",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Period end date. E.g. 2023-10-14",
                        "name": "endDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency ids. E.g. Argentina-Peso",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TransactionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Transaction": {
            "type": "object",
            "required": [
                "description",
                "purchase_amount"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "purchase_amount": {
                    "type": "number"
                },
                "purchase_date": {
                    "type": "string"
                }
            }
        },
        "model.TransactionResponse": {
            "type": "object",
            "required": [
                "description",
                "purchase_amount"
            ],
            "properties": {
                "converted_purchase_amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "exchange_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "purchase_amount": {
                    "type": "number"
                },
                "purchase_date": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
